import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        Book[] books = {
                new Book("The Great Gatsby", "F. Scott Fitzgerald", 1925),
                new Book("Harry Potter", "J.K. Rowling", 1997),
                new Book("Don Quixote", "Miguel de Cervantes", 1612, "Ivan Ivanov")
        };

        displayLibrary(books);
        borrowBook(books, scan);
        returnBook(books, "Don Quixote");

        int index = findBookByTitle(books, "The Great Gatsby");
        if (index != -1) {
            System.out.println("The index of the book 'The Great Gatsby' is: " + index);
        } else {
            System.out.println("Book isn't in our database.");
        }

        System.out.println("\nUpdating info on book 3...");
        books[2].updateBookInfo("Don Quixote", "Miguel de Cervantes", 2025);
        System.out.println("Updated Info on Book 3:");
        System.out.println(books[2].getDetails());

        displayLibrary(books);
    }

    public static void displayLibrary(Book[] books) {
        System.out.println("\n----- Current Inventory -----");
        for (Book book : books) {
            System.out.println(book.getDetails());
        }
    }

    public static void borrowBook(Book[] books, Scanner scan) {
        System.out.println("\nWhich book do you want to borrow? [1-3]: ");
        int bookRequested = scan.nextInt();
        scan.nextLine();
        if (bookRequested < 1 || bookRequested > books.length) {
            System.out.println("Invalid book number.");
            return;
        }
        System.out.println("Name: ");
        String name = scan.nextLine();
        books[bookRequested - 1].borrowBook(name);
        System.out.println("Book borrowed successfully!\n");
    }

    public static void returnBook(Book[] books, String searchTitle) {
        if (searchTitle == null || searchTitle.isEmpty()) {
            System.out.println("No title entered.\n");
            return;
        }
        int index = findBookByTitle(books, searchTitle);
        if (index != -1) {
            books[index].returnBook();
            System.out.println("Book returned successfully!\n");
        } else {
            System.out.println("The book doesn't exist.\n");
        }
    }

    public static int findBookByTitle(Book[] books, String title) {
        for (int i = 0; i < books.length; i++) {
            if (books[i].getTitle().equalsIgnoreCase(title)) {
                return i;
            }
        }
        return -1;
    }
}

class Book {
    private String title;
    private String author;
    private int yearPublished;
    private String borrowerName;

    public Book(String title, String author, int yearPublished) {
        this.title = title;
        this.author = author;
        this.yearPublished = yearPublished;
        this.borrowerName = null;
    }

    public Book(String title, String author, int yearPublished, String borrowerName) {
        this.title = title;
        this.author = author;
        this.yearPublished = yearPublished;
        this.borrowerName = borrowerName;
    }

    public String getDetails() {
        return String.format("Title: %s | Author: %s | Year Published: %d | Borrower: %s",
                title, author, yearPublished, borrowerName == null ? "None" : borrowerName);
    }

    public void updateBookInfo(String newTitle, String newAuthor, int newYearPublished) {
        this.title = newTitle;
        this.author = newAuthor;
        this.yearPublished = newYearPublished;
    }

    public void borrowBook(String borrowerName) {
        if (this.borrowerName == null) {
            this.borrowerName = borrowerName;
        } else {
            System.out.println("Book is already borrowed by " + this.borrowerName + ".");
        }
    }

    public void returnBook() {
        if (this.borrowerName != null) {
            this.borrowerName = null;
        } else {
            System.out.println("Book is not currently borrowed.");
        }
    }

    public String getTitle() {
        return title;
    }

    public String getBorrowerName() {
        return borrowerName;
    }
}
